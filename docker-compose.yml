version: "3"

services:
  lopco-reverse-proxy:
    container_name: reverse-proxy
    image: platonam/lopco-reverse-proxy:latest
    expose:
      - 8000
    environment:
      - TP_User=tinyproxy
      - TP_Group=tinyproxy
      - TP_ViaProxyName="LOPCO-API"
      - TP_Port=8000
      - TP_LogLevel=Info
      - TP_ReverseOnly=Yes
      - TP_MaxClients=100
      - TP_MinSpareServers=10
      - TP_MaxSpareServers=10
      - TP_StartServers=10
      - TP_Timeout=600
      - TP_1_ReversePath="/job-manager/" "http://job-manager/"
      - TP_2_ReversePath="/machine-registry/" "http://machine-registry/"
      - TP_3_ReversePath="/pipeline-registry/" "http://pipeline-registry/"
      - TP_4_ReversePath="/worker-registry/" "http://worker-registry/"
      - TP_5_ReversePath="/protocol-adapter-registry/" "http://protocol-adapter-registry/"
      - TP_6_ReversePath="/deployment-manager/" "http://deployment-manager/"
      - TP_7_ReversePath="/update-manager/" "http://update-manager/"
      - TP_8_ReversePath="/backup-manager/" "http://backup-manager/"
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-job-manager:
    container_name: job-manager
    image: platonam/lopco-job-manager:${LOPCO_CORE_ENVIRONMENT}
    expose:
      - 80
    volumes:
      - job_manager_data:/usr/src/app/data
      - data_cache:/data_cache
    environment:
      - CONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CONF_JOBS_CHECK=${LOPCO_JM_JOBS_CHECK}
      - CONF_JOBS_MAX_NUM=${LOPCO_JM_JOBS_MAX_NUM}
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-machine-registry:
    container_name: machine-registry
    image: platonam/lopco-machine-registry:latest
    expose:
      - 80
    volumes:
      - machine_registry_data:/usr/src/app/data
    environment:
      - CRUDCONF_LOGGER_NAME=machine-registry
      - CRUDCONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CRUDCONF_ENDPOINT_NAME=machines
      - CRUDCONF_ENDPOINT_FULL_COLLECTION=True
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-pipeline-registry:
    container_name: pipeline-registry
    image: platonam/lopco-pipeline-registry:latest
    expose:
      - 80
    volumes:
      - pipeline_registry_data:/usr/src/app/data
    environment:
      - CRUDCONF_LOGGER_NAME=pipeline-registry
      - CRUDCONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CRUDCONF_ENDPOINT_NAME=pipelines
      - CRUDCONF_ENDPOINT_ALLOW_POST=True
      - CRUDCONF_ENDPOINT_FULL_COLLECTION=True
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-worker-registry:
    container_name: worker-registry
    image: platonam/lopco-worker-registry:latest
    expose:
      - 80
    volumes:
      - worker_registry_data:/usr/src/app/data
    environment:
      - CRUDCONF_LOGGER_NAME=worker-registry
      - CRUDCONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CRUDCONF_ENDPOINT_NAME=workers
      - CRUDCONF_ENDPOINT_ALLOW_POST=True
      - CRUDCONF_ENDPOINT_FULL_COLLECTION=True
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-protocol-adapter-registry:
    container_name: protocol-adapter-registry
    image: platonam/lopco-protocol-adapter-registry:latest
    expose:
      - 80
    volumes:
      - protocol_adapter_registry_data:/usr/src/app/data
    environment:
      - CRUDCONF_LOGGER_NAME=protocol-adapter-registry
      - CRUDCONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CRUDCONF_ENDPOINT_NAME=protocol-adapters
      - CRUDCONF_ENDPOINT_ALLOW_POST=True
      - CRUDCONF_ENDPOINT_FULL_COLLECTION=True
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-deployment-manager:
    container_name: deployment-manager
    image: platonam/lopco-deployment-manager:${LOPCO_CORE_ENVIRONMENT}
    expose:
      - 80
    environment:
      - CONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CONF_DOCKER_SOCKET=unix://var/run/docker.sock
      - CONF_DOCKER_NETWORK_NAME=${LOPCO_CORE_DIR_NAME}_lopco-network
      - CONF_DOCKER_DISABLE_RM=${LOPCO_DM_DOCKER_DISABLE_RM}
      - CONF_DATACACHE_VOLUME_NAME=${LOPCO_CORE_DIR_NAME}_data_cache
    networks:
      - lopco-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-update-manager:
    container_name: update-manager
    image: platonam/lopco-update-manager:${LOPCO_CORE_ENVIRONMENT}
    expose:
      - 80
    environment:
      - CONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CONF_CORE_IMAGES=platonam/lopco-reverse-proxy:latest;platonam/lopco-job-manager:${LOPCO_CORE_ENVIRONMENT};platonam/lopco-machine-registry:latest;platonam/lopco-pipeline-registry:latest;platonam/lopco-worker-registry:latest;platonam/lopco-protocol-adapter-registry:latest;platonam/lopco-deployment-manager:${LOPCO_CORE_ENVIRONMENT};platonam/lopco-update-manager:${LOPCO_CORE_ENVIRONMENT};platonam/lopco-gui:${LOPCO_CORE_ENVIRONMENT}
      - CONF_UPDATE_AUTOMATIC=${LOPCO_UM_UPDATE_AUTOMATIC}
      - CONF_UPDATE_SECOND=${LOPCO_UM_UPDATE_SECOND}
      - CONF_UPDATE_MINUTE=${LOPCO_UM_UPDATE_MINUTE}
      - CONF_UPDATE_HOUR=${LOPCO_UM_UPDATE_HOUR}
      - CONF_UPDATE_INTERVAL=${LOPCO_UM_UPDATE_INTERVAL}
      - CONF_CORE_DELAY=${LOPCO_UM_CORE_DELAY}
      - CONF_CORE_TIMEOUT=${LOPCO_UM_CORE_TIMEOUT}
    networks:
      - lopco-network
    volumes:
      - ./.updater_com:/lopco_core
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-backup-manager:
    container_name: backup-manager
    image: platonam/lopco-backup-manager:${LOPCO_CORE_ENVIRONMENT}
    expose:
      - 80
    environment:
      - CONF_LOGGER_LEVEL=${LOPCO_LOG_LEVEL}
      - CONF_BACKUP_AUTOMATIC=${LOPCO_BM_BACKUP_AUTOMATIC}
      - CONF_BACKUP_SECOND=${LOPCO_BM_BACKUP_SECOND}
      - CONF_BACKUP_MINUTE=${LOPCO_BM_BACKUP_MINUTE}
      - CONF_BACKUP_HOUR=${LOPCO_BM_BACKUP_HOUR}
      - CONF_BACKUP_INTERVAL=${LOPCO_BM_BACKUP_INTERVAL}
    networks:
      - lopco-network
    volumes:
      - backup_manager_data:/exports
    labels:
      - "lopco-type=core"
    restart: unless-stopped

  lopco-gui:
    container_name: gui
    image: platonam/lopco-gui:${LOPCO_CORE_ENVIRONMENT}
    expose:
      - 80
    ports:
      - 8080:80
    networks:
      - lopco-network
    labels:
      - "lopco-type=core"
    restart: unless-stopped

volumes:
  data_cache:
  job_manager_data:
  machine_registry_data:
  pipeline_registry_data:
  worker_registry_data:
  protocol_adapter_registry_data:
  backup_manager_data:

networks:
  lopco-network:
    ipam:
      config:
        - subnet: ${LOPCO_SUBNET}
